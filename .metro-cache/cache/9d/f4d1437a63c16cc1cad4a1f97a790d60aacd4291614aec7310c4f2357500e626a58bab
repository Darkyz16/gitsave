{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":58},"end":{"line":2,"column":49,"index":107}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":39,"index":147}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const API_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n\n  // Créer une instance axios\n  const api = axios.default.create({\n    baseURL: `${API_URL}/api`,\n    timeout: 30000,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  // Intercepteur pour ajouter le token JWT à chaque requête\n  api.interceptors.request.use(async config => {\n    try {\n      const token = await SecureStore.getItemAsync('jwt_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération du token:', error);\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Intercepteur pour gérer les erreurs de réponse\n  api.interceptors.response.use(response => response, async error => {\n    if (error.response?.status === 401) {\n      // Token invalide ou expiré, supprimer le token\n      await SecureStore.deleteItemAsync('jwt_token');\n    }\n    return Promise.reject(error);\n  });\n\n  // Types\n\n  // Fonctions API\n  const authAPI = {\n    register: async data => {\n      const response = await api.post('/auth/register', data);\n      return response.data;\n    },\n    login: async data => {\n      const response = await api.post('/auth/login', data);\n      return response.data;\n    },\n    getCurrentUser: async () => {\n      const response = await api.get('/auth/me');\n      return response.data;\n    },\n    testAuth: async () => {\n      const response = await api.get('/fec/test-auth');\n      return response.data;\n    }\n  };\n  var _default = api;\n});","lineCount":103,"map":[[27,2,94,0,"Object"],[27,8,94,0],[27,9,94,0,"defineProperty"],[27,23,94,0],[27,24,94,0,"exports"],[27,31,94,0],[28,4,94,0,"enumerable"],[28,14,94,0],[29,4,94,0,"get"],[29,7,94,0],[29,18,94,0,"get"],[29,19,94,0],[30,6,94,0],[30,13,94,0,"_default"],[30,21,94,0],[31,4,94,0],[32,2,94,0],[33,2,72,0,"Object"],[33,8,72,0],[33,9,72,0,"defineProperty"],[33,23,72,0],[33,24,72,0,"exports"],[33,31,72,0],[34,4,72,0,"enumerable"],[34,14,72,0],[35,4,72,0,"get"],[35,7,72,0],[35,18,72,0,"get"],[35,19,72,0],[36,6,72,0],[36,13,72,0,"authAPI"],[36,20,72,0],[37,4,72,0],[38,2,72,0],[39,2,92,2],[39,6,92,2,"_expoVirtualEnv"],[39,21,92,2],[39,24,92,2,"require"],[39,31,92,2],[39,32,92,2,"_dependencyMap"],[39,46,92,2],[40,2,1,0],[40,6,1,0,"_axios"],[40,12,1,0],[40,15,1,0,"require"],[40,22,1,0],[40,23,1,0,"_dependencyMap"],[40,37,1,0],[41,2,1,0],[41,6,1,0,"axios"],[41,11,1,0],[41,14,1,0,"_interopDefault"],[41,29,1,0],[41,30,1,0,"_axios"],[41,36,1,0],[42,2,2,0],[42,6,2,0,"_expoSecureStore"],[42,22,2,0],[42,25,2,0,"require"],[42,32,2,0],[42,33,2,0,"_dependencyMap"],[42,47,2,0],[43,2,2,0],[43,6,2,0,"SecureStore"],[43,17,2,0],[43,20,2,0,"_interopNamespace"],[43,37,2,0],[43,38,2,0,"_expoSecureStore"],[43,54,2,0],[44,2,3,0],[44,6,3,0,"_expoConstants"],[44,20,3,0],[44,23,3,0,"require"],[44,30,3,0],[44,31,3,0,"_dependencyMap"],[44,45,3,0],[45,2,3,0],[45,6,3,0,"Constants"],[45,15,3,0],[45,18,3,0,"_interopDefault"],[45,33,3,0],[45,34,3,0,"_expoConstants"],[45,48,3,0],[46,2,5,0],[46,8,5,6,"API_URL"],[46,15,5,13],[46,18,5,16,"Constants"],[46,27,5,25],[46,28,5,25,"default"],[46,35,5,25],[46,36,5,26,"expoConfig"],[46,46,5,36],[46,48,5,38,"extra"],[46,53,5,43],[46,55,5,45,"EXPO_PUBLIC_BACKEND_URL"],[46,78,5,68],[46,82,5,68,"_expoVirtualEnv"],[46,97,5,68],[46,98,5,68,"env"],[46,101,5,68],[46,102,5,68,"EXPO_PUBLIC_BACKEND_URL"],[46,125,5,107],[46,129,5,111],[46,152,5,134],[48,2,7,0],[49,2,8,0],[49,8,8,6,"api"],[49,11,8,24],[49,14,8,27,"axios"],[49,19,8,32],[49,20,8,32,"default"],[49,27,8,32],[49,28,8,33,"create"],[49,34,8,39],[49,35,8,40],[50,4,9,2,"baseURL"],[50,11,9,9],[50,13,9,11],[50,16,9,14,"API_URL"],[50,23,9,21],[50,29,9,27],[51,4,10,2,"timeout"],[51,11,10,9],[51,13,10,11],[51,18,10,16],[52,4,11,2,"headers"],[52,11,11,9],[52,13,11,11],[53,6,12,4],[53,20,12,18],[53,22,12,20],[54,4,13,2],[55,2,14,0],[55,3,14,1],[55,4,14,2],[57,2,16,0],[58,2,17,0,"api"],[58,5,17,3],[58,6,17,4,"interceptors"],[58,18,17,16],[58,19,17,17,"request"],[58,26,17,24],[58,27,17,25,"use"],[58,30,17,28],[58,31,18,2],[58,37,18,9,"config"],[58,43,18,15],[58,47,18,20],[59,4,19,4],[59,8,19,8],[60,6,20,6],[60,12,20,12,"token"],[60,17,20,17],[60,20,20,20],[60,26,20,26,"SecureStore"],[60,37,20,37],[60,38,20,38,"getItemAsync"],[60,50,20,50],[60,51,20,51],[60,62,20,62],[60,63,20,63],[61,6,21,6],[61,10,21,10,"token"],[61,15,21,15],[61,17,21,17],[62,8,22,8,"config"],[62,14,22,14],[62,15,22,15,"headers"],[62,22,22,22],[62,23,22,23,"Authorization"],[62,36,22,36],[62,39,22,39],[62,49,22,49,"token"],[62,54,22,54],[62,56,22,56],[63,6,23,6],[64,4,24,4],[64,5,24,5],[64,6,24,6],[64,13,24,13,"error"],[64,18,24,18],[64,20,24,20],[65,6,25,6,"console"],[65,13,25,13],[65,14,25,14,"error"],[65,19,25,19],[65,20,25,20],[65,62,25,62],[65,64,25,64,"error"],[65,69,25,69],[65,70,25,70],[66,4,26,4],[67,4,27,4],[67,11,27,11,"config"],[67,17,27,17],[68,2,28,2],[68,3,28,3],[68,5,29,3,"error"],[68,10,29,8],[68,14,29,13],[69,4,30,4],[69,11,30,11,"Promise"],[69,18,30,18],[69,19,30,19,"reject"],[69,25,30,25],[69,26,30,26,"error"],[69,31,30,31],[69,32,30,32],[70,2,31,2],[70,3,32,0],[70,4,32,1],[72,2,34,0],[73,2,35,0,"api"],[73,5,35,3],[73,6,35,4,"interceptors"],[73,18,35,16],[73,19,35,17,"response"],[73,27,35,25],[73,28,35,26,"use"],[73,31,35,29],[73,32,36,3,"response"],[73,40,36,11],[73,44,36,16,"response"],[73,52,36,24],[73,54,37,2],[73,60,37,9,"error"],[73,65,37,26],[73,69,37,31],[74,4,38,4],[74,8,38,8,"error"],[74,13,38,13],[74,14,38,14,"response"],[74,22,38,22],[74,24,38,24,"status"],[74,30,38,30],[74,35,38,35],[74,38,38,38],[74,40,38,40],[75,6,39,6],[76,6,40,6],[76,12,40,12,"SecureStore"],[76,23,40,23],[76,24,40,24,"deleteItemAsync"],[76,39,40,39],[76,40,40,40],[76,51,40,51],[76,52,40,52],[77,4,41,4],[78,4,42,4],[78,11,42,11,"Promise"],[78,18,42,18],[78,19,42,19,"reject"],[78,25,42,25],[78,26,42,26,"error"],[78,31,42,31],[78,32,42,32],[79,2,43,2],[79,3,44,0],[79,4,44,1],[81,2,46,0],[83,2,71,0],[84,2,72,7],[84,8,72,13,"authAPI"],[84,15,72,20],[84,18,72,23],[85,4,73,2,"register"],[85,12,73,10],[85,14,73,12],[85,20,73,19,"data"],[85,24,73,37],[85,28,73,57],[86,6,74,4],[86,12,74,10,"response"],[86,20,74,18],[86,23,74,21],[86,29,74,27,"api"],[86,32,74,30],[86,33,74,31,"post"],[86,37,74,35],[86,38,74,42],[86,54,74,58],[86,56,74,60,"data"],[86,60,74,64],[86,61,74,65],[87,6,75,4],[87,13,75,11,"response"],[87,21,75,19],[87,22,75,20,"data"],[87,26,75,24],[88,4,76,2],[88,5,76,3],[89,4,78,2,"login"],[89,9,78,7],[89,11,78,9],[89,17,78,16,"data"],[89,21,78,31],[89,25,78,60],[90,6,79,4],[90,12,79,10,"response"],[90,20,79,18],[90,23,79,21],[90,29,79,27,"api"],[90,32,79,30],[90,33,79,31,"post"],[90,37,79,35],[90,38,79,51],[90,51,79,64],[90,53,79,66,"data"],[90,57,79,70],[90,58,79,71],[91,6,80,4],[91,13,80,11,"response"],[91,21,80,19],[91,22,80,20,"data"],[91,26,80,24],[92,4,81,2],[92,5,81,3],[93,4,83,2,"getCurrentUser"],[93,18,83,16],[93,20,83,18],[93,26,83,18,"getCurrentUser"],[93,27,83,18],[93,32,83,45],[94,6,84,4],[94,12,84,10,"response"],[94,20,84,18],[94,23,84,21],[94,29,84,27,"api"],[94,32,84,30],[94,33,84,31,"get"],[94,36,84,34],[94,37,84,41],[94,47,84,51],[94,48,84,52],[95,6,85,4],[95,13,85,11,"response"],[95,21,85,19],[95,22,85,20,"data"],[95,26,85,24],[96,4,86,2],[96,5,86,3],[97,4,88,2,"testAuth"],[97,12,88,10],[97,14,88,12],[97,20,88,12,"testAuth"],[97,21,88,12],[97,26,88,74],[98,6,89,4],[98,12,89,10,"response"],[98,20,89,18],[98,23,89,21],[98,29,89,27,"api"],[98,32,89,30],[98,33,89,31,"get"],[98,36,89,34],[98,37,89,35],[98,53,89,51],[98,54,89,52],[99,6,90,4],[99,13,90,11,"response"],[99,21,90,19],[99,22,90,20,"data"],[99,26,90,24],[100,4,91,2],[101,2,92,0],[101,3,92,1],[102,2,94,0],[102,6,94,0,"_default"],[102,14,94,0],[102,17,94,15,"api"],[102,20,94,18],[103,0,94,19],[103,3]],"functionMap":{"names":["<global>","interceptors.request.use$argument_0","interceptors.request.use$argument_1","interceptors.response.use$argument_0","interceptors.response.use$argument_1","authAPI.register","authAPI.login","authAPI.getCurrentUser","authAPI.testAuth"],"mappings":"AAA;ECiB;GDU;EEC;GFE;EGK,sBH;EIC;GJM;YK8B;GLG;SME;GNG;kBOE;GPG;YQE;GRG"},"hasCjsExports":false},"type":"js/module"}]}